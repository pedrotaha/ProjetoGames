/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ProjetoGames.view.Operacao;

import br.com.ProjetoGames.data.JogosData;
import br.com.ProjetoGames.data.UsuarioData;
import br.com.ProjetoGames.model.JogosModel;
import br.com.ProjetoGames.model.UsuarioModel;
import br.com.ProjetoGames.view.JFPrincipal;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class JFPesquisarJogo extends javax.swing.JFrame {

    int frameCount;
    JIFDetalhesJogos janela = new JIFDetalhesJogos();
    ArrayList<JogosModel> dados;
    JogosModel selecionado;
    UsuarioModel obj;

    public JFPesquisarJogo() {
        initComponents();
        frameCount = 0;
        dados = new ArrayList<>();
        this.obj = new UsuarioModel();
        selecionado = new JogosModel();
        setIcon();
        windowsClosing();
        //internoClosed();
        Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 30);
        UIManager.put("OptionPane.messageFont", font);
        UIManager.put("OptionPane.buttonFont", font);
    }

    public JFPesquisarJogo(UsuarioModel obj) {
        initComponents();
        frameCount = 0;
        dados = new ArrayList<>();
        this.obj = obj;
        selecionado = new JogosModel();
        setIcon();
        windowsClosing();
        //internoClosed();
        Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 30);
        UIManager.put("OptionPane.messageFont", font);
        UIManager.put("OptionPane.buttonFont", font);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpdJogo = new javax.swing.JDesktopPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbJogo = new javax.swing.JTable();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbDetalhes = new javax.swing.JButton();
        jlPikachu = new javax.swing.JLabel();
        jlPesquisar = new javax.swing.JLabel();
        jtPesquisar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pesquisar Jogos");
        setMinimumSize(new java.awt.Dimension(983, 800));
        setResizable(false);
        getContentPane().setLayout(null);

        jpdJogo.setBackground(new java.awt.Color(255, 255, 255));

        jtbJogo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jtbJogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Gênero", "Publicadora", "Plataforma"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbJogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbJogoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbJogo);

        jpdJogo.add(jScrollPane2);
        jScrollPane2.setBounds(20, 70, 780, 590);

        jbEditar.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ProjetoGames/imagens/Icones/icons8_Edit_Property_48px.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });
        jpdJogo.add(jbEditar);
        jbEditar.setBounds(40, 680, 153, 57);

        jbExcluir.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ProjetoGames/imagens/Icones/icons8_Trash_Can_48px.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });
        jpdJogo.add(jbExcluir);
        jbExcluir.setBounds(550, 680, 165, 57);

        jbDetalhes.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jbDetalhes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ProjetoGames/imagens/Icones/icons8_Pokedex_48px_1.png"))); // NOI18N
        jbDetalhes.setText("Detalhes");
        jbDetalhes.setEnabled(false);
        jbDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDetalhesActionPerformed(evt);
            }
        });
        jpdJogo.add(jbDetalhes);
        jbDetalhes.setBounds(300, 680, 183, 57);

        jlPikachu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ProjetoGames/imagens/Detective_Pika.png"))); // NOI18N
        jpdJogo.add(jlPikachu);
        jlPikachu.setBounds(760, -10, 200, 199);

        jlPesquisar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlPesquisar.setText("Pesquisar:");
        jpdJogo.add(jlPesquisar);
        jlPesquisar.setBounds(30, 20, 94, 22);

        jtPesquisar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPesquisarKeyReleased(evt);
            }
        });
        jpdJogo.add(jtPesquisar);
        jtPesquisar.setBounds(140, 20, 490, 28);

        getContentPane().add(jpdJogo);
        jpdJogo.setBounds(0, 0, 930, 770);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPesquisarKeyReleased
        try {
            atualizarTabela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao pesquisar" + e.getMessage());
        }
    }//GEN-LAST:event_jtPesquisarKeyReleased

    private void jbDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDetalhesActionPerformed
        try {
            if (frameCount == 0) {
                if (selecionado.getIdJogos() > 0) {
                    jpdJogo.add(janela);
                    janela.setVisible(true);
                    frameCount++;
                    tratarCampos(false);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jbDetalhesActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        ImageIcon imagemTitulojanelaT = new ImageIcon("C:\\Users\\Pedro\\Documents\\NetBeansProjects\\Luciene\\ProjetoGames\\src\\br\\com\\ProjetoGames\\imagens\\524d20cabd4731dffd6453fb707ab1d2b2b11c52_00.gif");
        if (selecionado.getIdJogos() > 0) {
            try {
                if (JOptionPane.showConfirmDialog(this, "Deseja Realmente excluir o registro?",
                    "Botão excluir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, imagemTitulojanelaT) == JOptionPane.YES_OPTION) {
                selecionado = dados.get(jtbJogo.getSelectedRow());
                UsuarioData DAO = new UsuarioData();
                if (DAO.excluir(selecionado.getIdJogos())) {
                    JOptionPane.showMessageDialog(this, "Excluido com sucesso");
                }
            }
            selecionado = new JogosModel();
            atualizarTabela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir:" + e.getMessage());
        }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        if (selecionado.getIdJogos() > 0) {
            try {
                selecionado = dados.get(jtbJogo.getSelectedRow());
                new JFCadJogo(obj, selecionado, 2).setVisible(true);
                dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao pesquisar" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jtbJogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbJogoMouseClicked
        try {
            selecionado = dados.get(jtbJogo.getSelectedRow());
            janela = new JIFDetalhesJogos(selecionado);
            internoClosed();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao pesquisar: " + e.getMessage());
        }
    }//GEN-LAST:event_jtbJogoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPesquisarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPesquisarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPesquisarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPesquisarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPesquisarJogo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbDetalhes;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JLabel jlPesquisar;
    private javax.swing.JLabel jlPikachu;
    private javax.swing.JDesktopPane jpdJogo;
    private javax.swing.JTextField jtPesquisar;
    private javax.swing.JTable jtbJogo;
    // End of variables declaration//GEN-END:variables
    private void setIcon() {
        ImageIcon imagemTitulojanelaT = new ImageIcon("C:\\Users\\Pedro\\Documents\\NetBeansProjects\\Luciene\\_Projetos\\ProjetoGames\\ProjetoGames2\\src\\br\\com\\ProjetoGames\\imagens\\Icones\\icons8_Find_User_Male_528px_1.png");
        setIconImage(imagemTitulojanelaT.getImage());
    }

    public void windowsClosing() {
        ImageIcon imagemTitulojanelaT = new ImageIcon("C:\\Users\\Pedro\\Documents\\NetBeansProjects\\Luciene\\ProjetoGames\\src\\br\\com\\ProjetoGames\\imagens\\524d20cabd4731dffd6453fb707ab1d2b2b11c52_00.gif");
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent we) {
                if (JOptionPane.showConfirmDialog(null, "Deseja \nRealmente \nSair?", "Botão Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, imagemTitulojanelaT) == JOptionPane.YES_OPTION) {
                    dispose();
                    new JFPrincipal(obj).setVisible(true);
                }
            }
        });
    }

    public void internoClosed() {
        janela.addInternalFrameListener(new InternalFrameAdapter() {
            public void internalFrameClosed(InternalFrameEvent e) {
                tratarCampos(true);
                frameCount--;
                jpdJogo.remove(janela);
            }
        });
    }

    public void tratarCampos(boolean n) {
        jtPesquisar.setEnabled(n);
        jtbJogo.setEnabled(n);
        jScrollPane2.setEnabled(n);
        jbDetalhes.setEnabled(n);
        jbEditar.setEnabled(n);
        jbExcluir.setEnabled(n);
    }

    public void atualizarTabela() throws Exception {
        JogosData DAO = new JogosData();
        dados = DAO.pesquisar(jtPesquisar.getText());
        DefaultTableModel mp = (DefaultTableModel) jtbJogo.getModel();
        mp.setNumRows(0);
        if (jtPesquisar.getText().length() > 1) {
            jbEditar.setEnabled(true);
            jbExcluir.setEnabled(true);
            jbDetalhes.setEnabled(true);
            for (JogosModel lista : dados) {
                mp.addRow(new String[]{lista.getTitulo(), lista.getGenero(), lista.getPublisher(), lista.getPlataforma()});
            }
//                if (obj.getTipoUsuarioModel().getNivel() > 0) {
//                    mp.addRow(new String[]{dados.get(i).getNome(), dados.get(i).getEmail(), dados.get(i).getTelefone(), dados.get(i).getTipoUsuarioModel().getDescricao()});
//                } else {
//                    if (dados.get(i).getTipoUsuarioModel().getNivel() <= 0) {
//                        mp.addRow(new String[]{dados.get(i).getNome(), dados.get(i).getEmail(), dados.get(i).getTelefone(), dados.get(i).getTipoUsuarioModel().getDescricao()});
//                    } else {
//                        dados.remove(i);
//                        i--;
//                    }
//                }
//            }
        }
        if (jtPesquisar.getText().length() == 0) {
            jbEditar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbDetalhes.setEnabled(false);
            selecionado = new JogosModel();
        }
    }

}
